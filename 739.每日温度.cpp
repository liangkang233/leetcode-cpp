/*
 * @lc app=leetcode.cn id=739 lang=cpp
 *
 * [739] 每日温度
 */

#include <iostream>
#include <vector>
#include <map>
#include <stack>
using namespace std;

// @lc code=start
class Solution {
public:
    vector<int> dailyTemperatures(vector<int>& temperatures) {
        vector<int> ans(temperatures.size(), 0);
        stack<int> st; // 为下标指向temperatures 的元素递减栈
        for (int i = 0; i < temperatures.size(); i++) {
            while (!st.empty() && temperatures[i] > temperatures[st.top()]) {
                ans[st.top()] = i - st.top();
                st.pop();
            }
            st.push(i);
        }
        return ans;
    }
};
// @lc code=end
// [73,74,75,71,69,72,76,73]
// [51,47,44,77,92,38,64,65,82,64,38,42,81,48,99,98,49,75,65,85,89,72,89,33,32,90,53,39,30,55,89,71,85,63,45,68,85,93,49,96,78,55,77,100,82,84,70,37,59,31,62,32,71,55,69,98,33,60,47,66,85,33,33,99,92,49,60,56,37,91,39,89,42,81,40,47,56,81,88,98,98,96,49,82,59,38,63,70,87,46,73,30,93,85,41,52,96,78,40,83,78,39,34,100,73,39,80,54,66,97,73,42,80,72,79,78,92,97,86,57,59,88,47,76,49,35,49,37,63,50,32,55,78,95,100,55,53,51,54,93,42,96,36,46,72,91,42,31,72,52,82,81,55,92,69,57,92,31,30,82,99,49,80,85,86,54,75,40,60,53,50,75,72,67,82,87,94,49,76,83,86,98,83,82,83,34,75,87,68,40,75,49,78,52,74,85,94,82,79,88,60,75,65,87,53,58,34,54,88,86,98,77,82,31,49,35,74,100,71,55,61,97,39,81,76,54,53,62,57,53,90,65,63,92,75,76,77,37,94,85,80,43,58,34,91,36,68,55,80,77,51,53,50,71,32,49,85,45,40,92,61,79,51,53,51,52,71,40,86,50,79,92,44,47,32,95,63,36,50,98,76,71,77,100,32,68,60,33,92,33,84,57,45,39,62,45,82,43,94,64,91,36,32,83,53,94,59,96,35,40,64,83,50,42,52,48,97,44,49,91,30,88,75,35,70,46,92,70,78,85,74,54,52,36,42,45,91,31,57,65,99,56,31,88,96,58,72,52,77,47,89,69,49,33,42,44,91,78,97,45,40,79,62,77,72,59,58,54,77,86,62,39,55,91,66,70,98,61,63,40,87,96,89,54,90,62,78,68,96,57,40,52,61,67,76,80,72,57,45,68,98,42,81,70,62,83,83,56,98,76,65,82,97,84,93,72,94,73,53,73,56,75,99,76,61,86,82,82,99,34,49,77,89,81,51,84,34,37,79,86,63,89,53,47,38,86,57,41,80,41,61,74,41,76,51,31,62,82,79,45,45,88,49,66,51,98,55,79,91,61,48,73,55,69,96,97,78,59,72,37,73,91,69,52,37,99,30,43,97,81,68,99,74,98,98,92,96,50,85,96,96,95,84,46,64,66,88,65,67,88,47,82,87,63,96,47,97,68,84,77,78,92,79,100,30,38,85,46,71,59,36,31,36,61,59,68,87,45,51,59,67,42,35,98,43,83,74,44,41,43,71,86,82,57,32,33,38,44,59,67,98,57,36,78,75,80,100,85,36,93,52,67,91,32,98,84,99,78,95,80,93,87,51,56,74,76,38,74,37,74,31,93,72,36,44,37,61,45,93,34,34,39,95,80,64,37,99,81,41,73,82,37,53,82,72,100,35,63,36,38,99,43,82,52,68,93,53,47,40,92,46,61,58,94,71,82,88,52,80,47,47,57,64,54,33,52,93,38,38,67,30,62,77,41,39,85,62,42,69,94,86,75,84,36,47,61,58,56,71,65,82,88,61,97,61,87,51,32,78,36,35,71,36,71,65,49,86,52,56,86,59,43,56,79,72,73,56,83,54,56,99,95,96,72,86,50,51,71,83,67,52,62,54,45,98,72,94,92,49,99,38,32,63,86,100,54,54,65,82,44,59,57,65,71,42,97,41,92,37,97,89,31,35,89,58,97,48,100,35,79,88,70,80,92,92,47,37,59,89,43,45,98,89,69,78,46,36,70,50,90,97,57,82,34,82,93,67,52,53,86,93,100,98,78,55,48,35,32,36,70,92,94,43,98,71,54,80,97,98,100,82,33,99,99,51,85,77,96,76,37,84,70,47,61,46,93,66,78,77,47,60,90,66,41,34,93,88,79,58,44,82,39,69,57,87,53,96,33,55,43,74,100,41,31,45,96,53,50,66,72,47,92,57,63,90,58,82,42,90,59,84,50,57,51,99,70,73,70,87,93,58,97,72,91,80,46,87,30,75,46,35,65,54,67,39,39,42,42,93,66,37,86,49,87,70,34,86,58,98,91,30,95,47,69,90,60,83,89,76,91,77,55,72,87,42,41,95,79,50,76,92,37,74,38,98,46,85,30,52,89,99,100,91,47,72,64,88,45,45,82,84,58,42,41,49,56,56,65,91,35,64,88,30,90,57,44,45,38,90,40,58,95,33,43,49,79,79,51,94,80,62,65,97,59,98,55,51,79,68,84,92,92,62,96,96,76,38,35,89,65,67,40,81,81,56,93,31,53,44,49,79,40,88,85,36,35,97,39,60,56,85,72,92,86,48,98,54,91,97,86,79,77,73,61,74,43,52,33,39,69,90,66,82,73,62,73,60,86,31,88,49,81,35,98,55,33,67,52,48,57,83,89,67,60,48,76,60,80,33,72,92,98,57,97,56,51,31,52,75,71,60,53,33,100,40,62,71,74,78,62,78,82,30,42,69,100,91,83,96,78,59,61,43,60,78,84,30,71,81,56,82,39,58,39,42,78,79,83,86,70,94,45,60,82,75,74,49,85,51,99,34,82,94,83,39,100,66,74,61,52,63,51,75,81,86,61,75,61,57,38,74,43,67,58,43,73,47,74,54,36,88,95,76,87,77,83,67,100,78,44,100,54,62,72,46,65,49,75,91,34,33,41,39,75,49,80,97,60,58,70,39,44,33,62,86,88,46,51,81,62,62,51,71,46,92,56,82,53,36,55,89,35,95,71,83,31,70,60,61,35,92,37,34,74,32,57,98,33,70,57,32,30,76,88,57,66,62,99,60,75,94,53,98,46,100,50,48,96,50,45,83,60,86,93,74,42,84,35,49,66,98,58,79,68,59,79,89,41,43,51,51,86,92,98,58,88,88,79,91,99,41,54,59,49,37,92,51,33,91,84,31,54,38,74,98,46,66,85,66,61,78,72,40,88,63,97,88,51,92,56,40,55,87,48,70,82,30,54,67,54,74,66,43,83,94,54,52,40,73,98,89,69,58,65,97,85,65,40,61,57,99,52,96,86,95,43,100,94,71,78,83,93,37,41,66,68,78,50,71,35,77,36,91,43,80,59,60,31,71,90,66,99,84,81,97,56,96,31,58,47,72,72,66,94,92,96,38,70,93,40,62,32,66,87,93,46,37,33,94,46,33,44,48,35,65,34,72,50,64,57,37,69,62,65,84,49,66,37,94,47,85,54,82,64,51,48,44,36,96,98,76,94,91,88,89,56,53,66,75,89,32,42,53,44,72,56,76,81,88,81,98,79,63,94,65,49,84,89,47,76,47,33,48,53,45,89,53,61,91,89,83,72,48,71,47,54,79,34,47,30,83,69,74,86,79,44,40,66,37,88,66,33,33,90,92,65,86,48,99,87,62,60,69,84,37,92,76,98,61,90,99,93,62,56,67,47,84,55,35,73,73,32,57,66,96,48,56,94,33,43,54,50,76,31,62,88,71,98,89,96,85,57,81,69,64,93,88,34,48,51,77,30,51,52,35,39,98,35,64,75,59,68,83,48,88,72,51,62,79,47,69,99,87,48,92,55,41,80,53,40,51,52,47,70,52,60,51,79,89,97,35,81,39,78,83,97,96,30,86,72,81,50,50,38,75,90,91,96,95,93,57,36,69,64,80,72,70,83,76,43,95,61,44,70,35,92,72,42,76,54,55,31,33,66,56,60,62,55,60,64,67,57,59,84,87,50,31,93,95,51,30,85,59,37,31,81,98,40,97,100,94,99,83,81,96,56,60,93,49,38,34,72,33,84,30,85,49,89,70,45,46,91,100,76,69,49,41,77,82,88,42,97,95,93,86,86,36,85,72,70,41,93,76,57,47,71,88,73,92,99,47,35,73,58,38,36,65,93,53,52,78,87,76,81,99,41,84,57,77,46,33,37,59,61,72,48,82,69,61,54,55,57,74,52,32,58,51,89,68,42,92,86,47,98,92,84,45,62,95,34,36,60,94,38,46,87,54,44,50,40,73,57,88,40,33,55,58,45,70,82,44,85,34,73,32,73,96,68,48,98,62,76,71,37,51,49,54,73,65,68,65,80,38,45,84,30,99,100,61,95,91,69,71,30,46,89,34,87,49,39,33,71,53,61,45,70,84,96,37,60,94,57,99,99,71,53,89,44,33,51,59,74,81,93,66,49,62,80,48,75,86,90,62,66,67,90,51,43,48,97,34,63,34,39,41,60,69,57,70,41,38,88,65,91,83,90,65,79,39,78,100,93,40,95,33,68,53,93,51,91,81,36,49,92,43,81,74,79,54,95,53,69,78,72,54,49,37,94,83,87,59,47,86,61,73,88,85,51,67,59,53,68,100,76,84,43,88,39,41,40,75,56,70,54,90,70,46,73,51,46,46,85,81,52,61,60,60,31,66,52,62,58,66,86,78,40,71,87,53,61,86,60,59,57,56,58,37,76,70,63,81,65,77,100,63,64,79,59,74,91,89,98,85,67,39,91,95,92,33,67,67,82,94,96,79,31,81,75,34,81,51,73,35,82,69,30,66,94,49,35,76,86,44,82,32,40,40,71,94,41,44,45,45,81,46,46,94,61,40,78,45,73,31,94,71,30,36,50,79,60,32,72,91,66,49,50,68,59,48,96,46,81,98,54,72,64,95,71,30,87,57,99,91,89,89,81,46,73,34,44,45,60,98,70,52,69,71,94,54,94,36,33,32,85,36,68,56,67,49,63,64,99,91,77,46,52,40,73,100,82,98,81,53,85,60,31,100,97,72,49,66,77,93,68,92,89,78,96,40,80,69,91,51,51,65,47,81,44,37,76,87,52,33,81,53,92,59,50,69,87,72,37,75,40,80,97,53,42,49,52,47,80,36,61,79,86,47,36,33,72,92,75,88,100,54,95,38,42,59,95,48,59,58,71,33,55,60,65,32,54,37,33,37,31,48,97,79,95,79,96,40,72,55,68,53,63,51,78,62,37,33,95,57,42,57,62,82,58,45,93,76,46,53,59,81,96,68,88,97,75,37,48,92,95,53,42,88,58,78,99,31,97,69,91,48,69,54,62,42,80,56,39,83,41,96,73,77,30,45,85,92,87,52,46,71,90,84,80,97,94,100,89,76,86,36,30,36,96,77,60,98,95,79,94,63,64,61,98,43,57,73,41,32,84,41,80,43,42,63,40,100,42,48,78,71,85,33,75,100,44,54,44,52,98,34,55,66,85,96,72,72,76,32,55,87,80,31,47,98,35,69,96,31,59,73,44,33,96,69,59,44,32,53,39,30,65,49,32,85,83,64,100,70,72,86,90,66,63,79,53,60,67,63,73,94,62,54,34,96,61,65,38,45,93,53,75,40,89,91,55]\n

class Solution {
public:
    vector<int> dailyTemperatures(vector<int>& temperatures) {
        int len = temperatures.size();
        vector<int> ans(len);
        map<int, int> mymap; // 对应key 与 其在 temperatures 下标   
        // 为了使距离足够小 从右至左遍历 构建一个单调栈map
        for(int i = len - 1; i >= 0; i--){
            // for (auto &&i : mymap) {
            //     cout << i.first << ":" << i.second << " ";
            // }cout << endl;
            auto index = mymap.upper_bound(temperatures[i]);
            ans[i] = index == mymap.end() ? 0 : index->second - i;
            mymap.erase(mymap.begin(), index); // 构建单调map
            mymap[temperatures[i]] = i; //更新或创建当前值对应下标
        }
        return ans;
    }
};